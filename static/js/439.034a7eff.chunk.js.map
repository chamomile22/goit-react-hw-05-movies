{"version":3,"file":"static/js/439.034a7eff.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx","servises/fetchMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderOverlay = styled.div`\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  background-color: #0000009d;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { createPortal } from 'react-dom';\nimport { LoaderOverlay } from './Loader.styled';\n\nconst loaderRoot = document.querySelector('#loader-root');\n\nconst Loader = () => {\n  return createPortal(\n    <LoaderOverlay>\n      <ThreeDots\n        color={'#ffffff'}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </LoaderOverlay>,\n    loaderRoot\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Nav = styled.nav`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-left: 25px;\n`;\n\nexport const BackLink = styled(NavLink)`\n  display: inline-block;\n  width: 65px;\n  margin-top: 20px;\n  margin-left: 30px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  border-radius: 4px;\n  text-align: center;\n  background-color: #ca2c2c;\n  color: #ffffffac;\n  transition: color 250ms ease-in-out;\n  transition-property: color, background-color;\n\n  &:hover,\n  &:focus {\n    color: #ffffff;\n    background-color: #b40909;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  padding-left: 30px;\n  padding-right: 30px;\n  margin-top: 15px;\n  margin-bottom: 30px;\n  display: grid;\n  grid-template-columns: 230px 1fr;\n`;\n\nexport const MoviePoster = styled.img`\n  border-radius: 10px;\n  grid-row-start: 1;\n  grid-row-end: 6;\n`;\n\nexport const MovieExtraInfo = styled.div`\n  height: 40px;\n  background-color: #ca2c2c;\n  display: flex;\n  align-items: stretch;\n  padding-left: 30px;\n`;\n\nexport const ExtraInfoLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  padding-left: 10px;\n  padding-right: 10px;\n  background-color: #ca2c2c;\n  color: #ffffffac;\n  transition: color 250ms ease-in-out;\n  transition-property: color, background-color;\n\n  &:hover {\n    color: #ffffff;\n    background-color: #b40909;\n  }\n`;\n","import Loader from 'components/Loader/Loader';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMovieDetails } from 'servises/fetchMovies';\nimport {\n  BackLink,\n  MoviePoster,\n  MovieInfo,\n  MovieExtraInfo,\n  ExtraInfoLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  const backLinkLocation = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(data => {\n        setMovieDetails(data);\n      })\n      .catch(() =>\n        toast.error('Woops, something went wrong, please try again later')\n      );\n  }, [movieId]);\n\n  if (!movieDetails) return;\n\n  const { title, poster_path, vote_average, overview, genres } = movieDetails;\n\n  const score = (vote_average * 10).toFixed(0);\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : 'https://placehold.co/200x300';\n\n  return (\n    <>\n      <BackLink to={backLinkLocation}>Back</BackLink>\n      {movieDetails && (\n        <MovieInfo>\n          <MoviePoster src={poster} alt={title} width=\"200\" height=\"300\" />\n          <h2>{title}</h2>\n          <p>\n            <b>User score:</b> <span>{score}%</span>\n          </p>\n          <p>\n            <b>Overview:</b>\n          </p>\n          <p>{overview ? overview : 'No overview found'}</p>\n          <p>\n            <b>Genres: </b>\n            <span>\n              {genres.length > 0\n                ? genres.map(({ name }) => name.toLowerCase()).join(', ')\n                : 'no genres'}\n            </span>\n          </p>\n        </MovieInfo>\n      )}\n      <MovieExtraInfo>\n        <ExtraInfoLink to=\"cast\" state={{ from: backLinkLocation }}>\n          Cast\n        </ExtraInfoLink>\n        <ExtraInfoLink to=\"reviews\" state={{ from: backLinkLocation }}>\n          Reviews\n        </ExtraInfoLink>\n      </MovieExtraInfo>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: '699a8a8a6315fbf58e6f205efaa3a1e3',\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getTrendingMovies = () => {\n  const path = 'trending/movie/day';\n  return fetch(`${BASE_URL}${path}?${searchParams}`).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n};\n\nexport const getMoviesByName = query => {\n  const path = 'search/movie';\n  return fetch(`${BASE_URL}${path}?${searchParams}&query=${query}`).then(\n    res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }\n  );\n};\n\nexport const getMovieDetails = id => {\n  const path = `movie/${id}`;\n  return fetch(`${BASE_URL}${path}?${searchParams}`).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n};\n\nexport const getMovieDetailsCast = id => {\n  const path = `movie/${id}/credits`;\n  return fetch(`${BASE_URL}${path}?${searchParams}`).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n};\n\nexport const getMovieDetailsReviews = id => {\n  const path = `movie/${id}/reviews`;\n  return fetch(`${BASE_URL}${path}?${searchParams}`).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n};\n"],"names":["LoaderOverlay","styled","loaderRoot","document","querySelector","createPortal","color","wrapperStyle","position","top","left","transform","BackLink","NavLink","MovieInfo","MoviePoster","MovieExtraInfo","ExtraInfoLink","useState","movieDetails","setMovieDetails","location","useLocation","movieId","useParams","backLinkLocation","state","from","useEffect","getMovieDetails","then","data","catch","toast","title","poster_path","vote_average","overview","genres","score","toFixed","poster","to","src","alt","width","height","length","map","name","toLowerCase","join","Suspense","fallback","Loader","BASE_URL","searchParams","URLSearchParams","method","api_key","language","include_adult","headers","accept","getTrendingMovies","fetch","res","ok","json","getMoviesByName","query","id","path","getMovieDetailsCast","getMovieDetailsReviews"],"sourceRoot":""}